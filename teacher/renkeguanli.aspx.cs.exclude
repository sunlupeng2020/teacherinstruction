using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Data.SqlClient;

public partial class teachermanage_kechengguanli_renkeguanli : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            BindRenke();
        }
    }
    protected void BindRenke()
    {
        string username = ((FormsIdentity)HttpContext.Current.User.Identity).Ticket.Name;
        string kechengid = Session["kechengid"].ToString();
        DataTable dt = KechengInfo.GetTeacherRenKeKecheng(username, kechengid);
        GridView1.DataSource = dt;
        GridView1.DataBind();
    }
    protected void Button1_Click(object sender, EventArgs e)
    {
        Label1.Text = "";
        string kechengid = Session["kechengid"].ToString();
        string username = ((FormsIdentity)HttpContext.Current.User.Identity).Ticket.Name;
        if (DropDownList4.SelectedIndex >= 0)
        {
            //检查课程是否有其他教师担任
            string banjiid = DropDownList4.SelectedValue.Trim();
            string renketeacherusername = RenkeInfo.GetTeacherusername(kechengid, banjiid);
            if (renketeacherusername !=string.Empty)
            {
                string txingming = TeacherInfo.TeacherXingMing(renketeacherusername);
                Label1.Text = "该课程已被教师：" + txingming + "担任，请与之联系。添加任课失败！";
                return;
            }
            string begintime = DateTime.Now.ToString();
            SqlConnection conn = new SqlConnection();
            conn.ConnectionString = ConfigurationManager.ConnectionStrings["kecheng2012ConnectionString"].ConnectionString;
            SqlCommand comm = conn.CreateCommand();
            try
            {
                conn.Open();
                comm.CommandText = "insert into tb_teacherrenke(kechengid,teacherusername,banjiid,begintime) values(" + kechengid + ",'" + username + "'," + banjiid + ",'" + begintime + "')";
                if (comm.ExecuteNonQuery() > 0)
                {
                    ScriptManager.RegisterClientScriptBlock(this, typeof(string), "", "alert('添加任课成功！');", true);
                    Label1.Text = "添加任课成功！";
                }
                BindRenke();
            }
            catch (Exception ex)
            {
                Label1.Text = "创建任课失败。失败原因：" + ex.Message;
            }
            finally
            {
                if (conn.State.ToString() == "Opened")
                    conn.Close();
            }
        }
        else
        {
            ScriptManager.RegisterClientScriptBlock(this, typeof(string), "", "alert('请选择班级！');", true);
            Label1.Text = "请选择班级。";
        }
    }
     protected void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            e.Row.Cells[0].Text = (e.Row.RowIndex + 1).ToString();
            ((LinkButton)(e.Row.Cells[3].FindControl("LinkButton1"))).Attributes.Add("onClick", "return confirm('您确定要删除该任课信息吗？');");
        }
    }
    protected void LinkButton1_Click(object sender, EventArgs e)
    {
        Label1.Text = "";
        string renkeid = ((LinkButton)sender).CommandArgument.ToString();
        if (RenkeInfo.IsTeacherHaveZuoye(renkeid))
        {
            Label1.Text = "您已给该班布置过作业，不能删除此任课信息。";
            return;
        }
        if (RenkeInfo.IsTeacherHaveCeshi(renkeid))
        {
            Label1.Text = "您已给该班布置过测试项目，不能删除此任课信息。";
            return;
        }
        if (RenkeInfo.DelRenke(renkeid))
        {
            Label1.Text = "删除任课信息成功！";
            BindRenke();
        }
        else
        {
            Label1.Text = "删除任课信息失败！";
        }
    }
}
